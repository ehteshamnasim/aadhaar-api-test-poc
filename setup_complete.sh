#!/bin/bash

echo "üöÄ Setting up API Test Automation Environment"
echo "=============================================="

# Install Python dependencies
echo "üì¶ Installing Python dependencies..."
pip install -r requirements.txt

# Install pytest-json-report for better test parsing
echo "üìä Installing pytest-json-report for accurate test results..."
pip install pytest-json-report

# Install coverage tools
echo "üìà Installing coverage tools..."
pip install coverage pytest-cov

# Create necessary directories
echo "üìÅ Creating directories..."
mkdir -p tests
mkdir -p htmlcov
mkdir -p specs

# Set up Git hooks (optional)
echo "üîß Setting up Git hooks..."
if [ -d ".git" ]; then
    # Create pre-commit hook to validate tests
    cat > .git/hooks/pre-commit << 'EOF'
#!/bin/bash
echo "üß™ Running pre-commit validation..."

# Check if tests exist and are valid
if ls tests/test_*.py 1> /dev/null 2>&1; then
    echo "‚úÖ Test files found"
    python -m py_compile tests/test_*.py
    if [ $? -eq 0 ]; then
        echo "‚úÖ Test files are valid Python syntax"
    else
        echo "‚ùå Syntax errors in test files"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  No test files found"
fi

echo "‚úÖ Pre-commit validation passed"
EOF
    chmod +x .git/hooks/pre-commit
fi

echo ""
echo "‚úÖ Setup completed!"
echo ""
echo "üîß Next steps:"
echo "1. Start the dummy API: python api/dummy_aadhaar_api.py"
echo "2. Start the dashboard: python dashboard/server.py"
echo "3. Run the automation: python main.py"
echo ""
echo "üìã Health checks:"
echo "‚Ä¢ API health: curl http://localhost:5001/health"
echo "‚Ä¢ Dashboard: http://localhost:8080"
echo "‚Ä¢ Ollama: curl http://localhost:11434/api/tags"
echo ""